{"version":3,"sources":["userRequestController.js"],"names":["requests","id","requestId","title","description","date","status","priority","userId","UserRequestController","req","res","json","data","findARequest","find","requestFinder","params","message","newRequest","length","body","push"],"mappings":";;;;;;;;;;AAAA,IAAMA,WAAY,CAEhB;AACEC,MAAI,CADN;AAEEC,aAAW,KAFb;AAGEC,SAAO,YAHT;AAIEC,eAAa,wBAJf;AAKEC,QAAM,YALR;AAMEC,UAAQ,SANV;AAOEC,YAAU,MAPZ;AAQEC,UAAQ;AARV,CAFgB,EAahB;AACEP,MAAI,CADN;AAEEC,aAAW,IAFb;AAGEC,SAAO,uBAHT;AAIEC,eAAa,kCAJf;AAKEC,QAAM,YALR;AAMEC,UAAQ,UANV;AAOEC,YAAU,QAPZ;AAQEC,UAAQ;AARV,CAbgB,CAAlB;;IA0BMC,qB;;;;;;;mCACkBC,G,EAAKC,G,EAAK;AAC9B,aAAOA,IAAIL,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB;AAC1BN,gBAAQ,SADkB;AAE1BO,cAAM;AACJb;AADI;AAFoB,OAArB,CAAP;AAMD;;;0CAE4BU,G,EAAKC,G,EAAK;AACrC,UAAMG,eAAed,SAASe,IAAT,CAAc;AAAA,eAAiBC,cAAcd,SAAd,IAA2BQ,IAAIO,MAAJ,CAAWf,SAAvD;AAAA,OAAd,CAArB;AACA,UAAI,CAACY,YAAL,EAAmB;AACjB,eAAOH,IAAIL,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB;;AAE1BN,kBAAQ,MAFkB;AAG1BY,mBAAS;AAHiB,SAArB,CAAP;AAKD;AACD,aAAOP,IAAIL,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB;;AAE1BN,gBAAQ,SAFkB;AAG1BY,iBAAS,eAHiB;AAI1BL,cAAM;AACJb,oBAAUc;AADN;AAJoB,OAArB,CAAP;AAQD;;;kCAEoBJ,G,EAAKC,G,EAAK;AAC7B,UAAMQ,aAAc;AAClBlB,YAAID,SAASoB,MAAT,GAAkB,CADJ;AAElBjB,eAAOO,IAAIW,IAAJ,CAASlB,KAFE;AAGlBC,qBAAaM,IAAIW,IAAJ,CAASjB,WAHJ;AAIlBC,cAAM,YAJY;AAKlBC,gBAAQ,MALU;AAMlBC,kBAAUG,IAAIW,IAAJ,CAASd,QAND;AAOlBC,gBAAQ;AAPU,OAApB;AASAR,eAASsB,IAAT,CAAcH,UAAd;AACA,aAAOR,IAAIL,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB;;AAE1BN,gBAAQ,SAFkB;AAG1BY,iBAAS,+BAHiB;AAI1BL,cAAM;AACJb,oBAAUmB;AADN;AAJoB,OAArB,CAAP;AAQD;;;gCAEkBT,G,EAAKC,G,EAAK;AAC3B,UAAMG,eAAed,SAASe,IAAT,CAAc;AAAA,eAAiBC,cAAcd,SAAd,IAA2BQ,IAAIO,MAAJ,CAAWf,SAAvD;AAAA,OAAd,CAArB;AACA,UAAI,CAACY,YAAL,EAAmB;AACjB,eAAOH,IAAIL,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB;;AAE1BN,kBAAQ,MAFkB;AAG1BY,mBAAS;AAHiB,SAArB,CAAP;AAKD;AACDJ,mBAAaX,KAAb,GAAqBO,IAAIW,IAAJ,CAASlB,KAA9B;AACAW,mBAAaV,WAAb,GAA2BM,IAAIW,IAAJ,CAASjB,WAApC;AACAU,mBAAaP,QAAb,GAAwBG,IAAIW,IAAJ,CAASd,QAAjC;AACA,aAAOI,IAAIL,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB;;AAE1BN,gBAAQ,SAFkB;AAG1BY,iBAAS,+BAHiB;AAI1BL,cAAM;AACJb,oBAAUc;AADN;AAJoB,OAArB,CAAP;AAQD;;;;;;kBAGYL,qB","file":"userRequestController.js","sourceRoot":"C:/Users/YOMI OLAOYE/Desktop/m-tracker server/server/controllers","sourcesContent":["const requests = ([\r\n\r\n  {\r\n    id: 1,\r\n    requestId: 31065,\r\n    title: 'AC repairs',\r\n    description: 'AC power supply faulty',\r\n    date: '2018-17-05',\r\n    status: 'pending',\r\n    priority: 'high',\r\n    userId: 111,\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    requestId: 4005,\r\n    title: 'Printer ink exhausted',\r\n    description: 'The ink of the printer exhausted',\r\n    date: '2018-17-12',\r\n    status: 'resolved',\r\n    priority: 'medium',\r\n    userId: 111,\r\n  },\r\n\r\n]);\r\n\r\nclass UserRequestController {\r\n  static getAllRequests(req, res) {\r\n    return res.status(200).json({\r\n      status: 'success',\r\n      data: {\r\n        requests,\r\n      },\r\n    });\r\n  }\r\n\r\n  static getRequestByRequestId(req, res) {\r\n    const findARequest = requests.find(requestFinder => requestFinder.requestId == req.params.requestId);\r\n    if (!findARequest) {\r\n      return res.status(404).json({\r\n\r\n        status: 'fail',\r\n        message: 'Request not found!',\r\n      });\r\n    }\r\n    return res.status(200).json({\r\n\r\n      status: 'success',\r\n      message: 'Request found',\r\n      data: {\r\n        requests: findARequest,\r\n      },\r\n    });\r\n  }\r\n\r\n  static createRequest(req, res) {\r\n    const newRequest = ({\r\n      id: requests.length + 1,\r\n      title: req.body.title,\r\n      description: req.body.description,\r\n      date: '2018-18-05',\r\n      status: 'open',\r\n      priority: req.body.priority,\r\n      userId: 111,\r\n    });\r\n    requests.push(newRequest);\r\n    return res.status(201).json({\r\n\r\n      status: 'success',\r\n      message: 'Request created successfully!',\r\n      data: {\r\n        requests: newRequest,\r\n      },\r\n    });\r\n  }\r\n\r\n  static editRequest(req, res) {\r\n    const findARequest = requests.find(requestFinder => requestFinder.requestId == req.params.requestId);\r\n    if (!findARequest) {\r\n      return res.status(404).json({\r\n\r\n        status: 'fail',\r\n        message: 'Request not found!',\r\n      });\r\n    }\r\n    findARequest.title = req.body.title;\r\n    findARequest.description = req.body.description;\r\n    findARequest.priority = req.body.priority;\r\n    return res.status(201).json({\r\n\r\n      status: 'success',\r\n      message: 'Request updated successfully!',\r\n      data: {\r\n        requests: findARequest,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport default UserRequestController;\r\n"]}